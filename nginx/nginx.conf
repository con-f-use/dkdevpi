daemon off;             # Don't fork
error_log stderr warn;  # Log to stderr
pid /tmp/nginx.pid;     # Move PID to a place writable as non-root

# Configure worker processes
worker_processes auto;
events {
    worker_connections 1024;
}

http {

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    include mime.types;
    default_type application/octet-stream;

    # Put temp files in a place writable as non-root
    client_body_temp_path /tmp/client_body;
    fastcgi_temp_path /tmp/fastcgi_temp;
    proxy_temp_path /tmp/proxy_temp;
    scgi_temp_path /tmp/scgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;

    # Zero-Downtime setup
    upstream dkdevpi {
        server devpi:4040;
        server areplica:4041 backup;
    }
    # For load balancing, you'd want to do something like that:
    # upstream dkdevpi {
        #ip_hash;    # Have clients 'stick' to a single server based on client IP - doesn't work with backup
        #least_conn; # Favor host with least connetions in balancing
        #server devpi:4040;
        #server areplica:4041 weight=3 max_fails=3 fail_timeout=15s;
        #server breplica:4042; #implicit weight 1
        #server creplica:4043 down; # Mark host as temporarily down
    # }

    server {
        server_name localhost $hostname;  # add DNS names, e.g. www.example.com here
        listen 8443 ssl;

        # The included certificate files are for illustration purposes only. Do NOT actually use them!
        ssl_certificate       /devpi/dkdevpi.crt;  # replace certificate and key file with yours...
        ssl_certificate_key   /devpi/dkdevpi.key;  # ...don't just use the provided ones!

        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        # Use GZIP
        gzip             on;
        gzip_min_length  2000;
        gzip_proxied     any;
        gzip_types       application/json;
        gzip_comp_level  3;

        proxy_read_timeout 60s;
        client_max_body_size 64M;

        root /devpi;              # Root of devpi server directory
        error_log stderr warn;    # Log to stderr

        # Try serving static files directly
        location ~ /\+f/ {
            error_page 418 = @proxy_to_app;
            if ($request_method != GET) {
                return 418;
            }
            expires max;
            try_files /server/+files$uri @proxy_to_app;
        }
        location ~ /\+static/ {
            error_page 418 = @proxy_to_app;
            if ($request_method != GET) {
                return 418;
            }
            expires max;
            try_files /+static$uri @proxy_to_app;
        }

        # Try serving docs directly
        location ~ /\+doc/ {
            try_files /server$uri @proxy_to_app;
        }

        # Otherwise redirect to devpi
        location / {
            error_page 418 = @proxy_to_app;
            return 418;
        }
        location @proxy_to_app {
            proxy_pass http://dkdevpi;
            #proxy_pass http://localhost:4040; # for testing without devpi
            proxy_set_header X-outside-url $scheme://$host:SSL_PORT;
            proxy_set_header X-Real-IP $remote_addr;
            expires -1;  # no-cache
        }

    }

    server {
        server_name localhost $hostname "";
        listen 8080;

        # Use GZIP
        gzip             on;
        gzip_min_length  2000;
        gzip_proxied     any;
        gzip_types       application/json;
        gzip_comp_level  3;

        proxy_read_timeout 60s;
        client_max_body_size 64M;

        root /devpi;              # Root of devpi server directory
        error_log stderr warn;    # Log to stderr

        # Try serving static files directly
        location ~ /\+f/ {
            error_page 418 = @proxy_to_app;
            if ($request_method != GET) {
                return 418;
            }
            expires max;
            try_files /server/+files$uri @proxy_to_app;
        }
        location ~ /\+static/ {
            error_page 418 = @proxy_to_app;
            if ($request_method != GET) {
                return 418;
            }
            expires max;
            try_files /+static$uri @proxy_to_app;
        }

        # Try serving docs directly
        location ~ /\+doc/ {
            try_files /server$uri @proxy_to_app;
        }

        # Otherwise redirect to devpi
        location / {
            error_page 418 = @proxy_to_app;
            return 418;
        }
        location @proxy_to_app {
            proxy_pass http://dkdevpi;
            #proxy_pass http://localhost:4040; # for testing without devpi
            proxy_set_header X-outside-url $scheme://$host:PORT;
            proxy_set_header X-Real-IP $remote_addr;
            expires -1;  # no-cache
        }

    }

}
